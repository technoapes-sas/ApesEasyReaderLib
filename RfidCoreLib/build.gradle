plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.android' version '1.9.22'
}

android {

    compileSdk 34

    defaultConfig {
        minSdkVersion 26
        targetSdk 34
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    namespace 'com.apes.capuchin.capuchinrfidlib.lib'
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('libs/jxl.jar')

    api project(":RfidCoreLib:ZebraApi3")
    api project(":RfidCoreLib:ZebraApi3ASCII")
    api project(":RfidCoreLib:ZebraApi3LLRP")
    api project(":RfidCoreLib:ZebraApi3Cmn")
    api project(":RfidCoreLib:ZebraApi3Transport")
    api project(":RfidCoreLib:ZebraApi3Interface")
    api project(":RfidCoreLib:ZebraApi3Ziotc")
    api project(":RfidCoreLib:ZebraApi3ZiotcTransport")
    api project(":RfidCoreLib:ZebraApi3BarcodeScannerLibrary")
    api project(":RfidCoreLib:ChainwayDeviceApi")

    implementation libs.appcompat
    implementation libs.core.ktx
    implementation libs.androidx.support.v4

    implementation libs.coroutine.core
    implementation libs.coroutine.android

    implementation libs.gson
    implementation libs.androidx.junit.ktx

    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core

    androidTestImplementation libs.androidx.core

    testImplementation libs.junit.jupiter.api
    testImplementation libs.assertj.core
    testRuntimeOnly libs.junit.jupiter.engine

    // Mockito para simular objetos dependientes
    testImplementation libs.mockito.core

    // MockK para simular objetos dependientes (alternativa a Mockito)
    testImplementation libs.mockk
}

project.afterEvaluate {
    publishing {
        publications {
            libraryProject(MavenPublication) {
                setGroupId 'com.apes.capuchin.rfid'
                setArtifactId 'capuchin-rfid-lib'
                version '1.0.0'
                artifact bundleReleaseAar

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each { dep ->
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dep.group)
                        dependencyNode.appendNode('artifactId', dep.name)
                        dependencyNode.appendNode('version', dep.version)
                    }
                }
            }
        }
        repositories {
            maven {
                url = uri("https://jitpack.io")
            }
        }
    }
}